version: '3.9'
name: food-list
services:
  app:
    build:
      context: mainApp
      dockerfile: mainApp/AppDockerfile
    container_name: app
    ports:
      - '8761:8761'
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
  elastic-app:
    build:
      context: elasticApp
      dockerfile: elasticApp/AppDockerfile
    container_name: elastic-app
    ports:
      - '8081:8081'
    depends_on:
      elasticsearch:
        condition: service_healthy
  db:
    build:
      context: postgres
      dockerfile: postgres/PostgresDockerfile
    container_name: db
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  elasticsearch:
    build:
      context: elastic
      dockerfile: elastic/ESDockerfile
    healthcheck:
      test: [ "CMD", "curl", "-XGET", "http://elasticsearch:9200/_cat/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.4
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.3
    environment:
      - xpack.monitoring.enabled=false
      - xpack.management.enabled=false
    volumes:
      - ./logstash/pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf:ro
      - ./logstash/postgresql-42.5.1.jar:/usr/share/logstash/postgresql-42.5.1.jar
    depends_on:
      - elastic-app